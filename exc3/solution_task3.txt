Архитектурное решение по трейсингу:

Системы, в отношении которых необходимость применить паттерн и технологию трейсинга:

- Shop API
- CRM API: 
- MES API.

Причины использования паттерна вызваны тем, что присутствуют жалобы со стороны пользователей на долгую загрузку и длительные запросы в базы данных, а также потенциальные точки "отказа" или возникновения ошибок.

Данные для добавления в список трейсинга:

- Текущая система\Идентификатор приложения
- Идентификатор заказа
- API\Endpoint запроса
- Время обработки запроса\заказа

Мотивация:

1. Ускорение команды при разработке и тестировании продукта в поисках нахождения узких мест системы и потенциальных проблем
2. Определение "узких" мест в системе с точки зрения задержек и увеличенного времени ответа
3. Повышение уровня зрелости процесса расследования инцидентов 
4. Обнаружение критических и высокого уровня ошибок в системе 
5. Повышение наблюдаемости в системе


Предлагаемое решение: 



Компромисы:

Tracing не подойдет в случае:

- Для купленной сторонней системы, для которой тяжело внедрить соответствующую библиотеку трейсинга
- Обработка запросов в самой базе данных обойдется компании дорогостоящим внедрением
- Обработка запросов в брокере сообщений может занять длительное время на внедрение текущей командой

Безопасность:

- Установить аутентификацию и авторизацию пользователей
- Установить ограничение на вход только для сотрудников Компании
- Ограничить доступ из сети Интернет и разрешить доступ только из доверенной сети администраторов\операторов системы
